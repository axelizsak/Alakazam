import { Account } from 'starknet';
import type { EthSigProposeMessage, EthSigVoteMessage, VanillaVoteMessage, VanillaProposeMessage, Message, Envelope, ClientConfig } from '../../types';
export declare class StarkNetTx {
    config: ClientConfig;
    constructor(config: ClientConfig);
    getStrategiesAddresses(envelope: Envelope<Message>): Promise<string[]>;
    getStrategiesParams(call: 'propose' | 'vote', strategiesAddresses: string[], envelope: Envelope<Message>): Promise<string[][]>;
    getExtraProposeCalls(strategiesAddresses: string[], envelope: Envelope<Message>): Promise<import("starknet").Call[]>;
    getProposeCalldata(strategiesAddresses: string[], envelope: Envelope<VanillaProposeMessage | EthSigProposeMessage>): Promise<string[]>;
    getVoteCalldata(strategiesAddresses: string[], envelope: Envelope<VanillaVoteMessage | EthSigVoteMessage>): Promise<string[]>;
    propose(account: Account, envelope: Envelope<VanillaProposeMessage | EthSigProposeMessage>): Promise<import("starknet").InvokeFunctionResponse>;
    vote(account: Account, envelope: Envelope<VanillaVoteMessage | EthSigVoteMessage>): Promise<import("starknet").InvokeFunctionResponse>;
}
