{"ast":null,"code":"var _jsxFileName = \"/home/axel/Bureau/Pragma_H/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [data, setData] = useState(null);\n  const [data2, setData2] = useState(null);\n  useEffect(() => {\n    const fetchData = () => {\n      fetch('http://localhost:3000/', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Accept': 'application/json'\n        },\n        body: JSON.stringify({\n          query: `\n            query {\n              data(orderBy: id, first: 1) {\n                nb_block\n                starknet_block\n                eventCount\n              }\n            }\n          `\n        })\n      }).then(r => r.json()).then(data => {\n        console.log('API response:', data);\n        setData(data.data.data);\n      }).catch(error => console.error('Error fetching data:', error));\n    };\n    const fetchData2 = () => {\n      fetch('http://localhost:3001/', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Accept': 'application/json'\n        },\n        body: JSON.stringify({\n          query: `\n          query {\n            data(orderBy: id, first: 1) {\n              nb_block\n              starknet_block\n              eventCount\n            }\n          }\n          `\n        })\n      }).then(r => r.json()).then(data => {\n        console.log('API response:', data);\n        setData2(data.data.data);\n      }).catch(error => console.error('Error fetching data:', error));\n    };\n    fetchData(); // Fetch data immediately\n    fetchData2(); // Fetch data from the second server\n    const intervalId = setInterval(fetchData, 1000); // Fetch data every 1 second\n    const intervalId2 = setInterval(fetchData2, 1000); // Fetch data from the second server every 1 second\n\n    return () => {\n      clearInterval(intervalId); // Clean up on unmount\n      clearInterval(intervalId2); // Clean up on unmount\n    };\n  }, []);\n  if (!data || !data2) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [data.map(d => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Block Number: \", d.nb_block]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Starknet Block: \", d.starknet_block]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Event Count: \", d.eventCount]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }, this)]\n    }, d.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }, this)), data2.map(d => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Block Number: \", d.nb_block]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Starknet Block: \", d.starknet_block]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Event Count: \", d.eventCount]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }, this)]\n    }, d.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"NWFDa8OUjlYXh5Yv44J9ftR+o+s=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","App","_s","data","setData","data2","setData2","fetchData","fetch","method","headers","body","JSON","stringify","query","then","r","json","console","log","catch","error","fetchData2","intervalId","setInterval","intervalId2","clearInterval","children","fileName","_jsxFileName","lineNumber","columnNumber","map","d","nb_block","starknet_block","eventCount","id","_c","$RefreshReg$"],"sources":["/home/axel/Bureau/Pragma_H/frontend/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\n\nfunction App() {\n  const [data, setData] = useState(null);\n  const [data2, setData2] = useState(null);\n\n  useEffect(() => {\n    const fetchData = () => {\n      fetch('http://localhost:3000/', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Accept': 'application/json',\n        },\n        body: JSON.stringify({\n          query: `\n            query {\n              data(orderBy: id, first: 1) {\n                nb_block\n                starknet_block\n                eventCount\n              }\n            }\n          `\n        })\n      })\n      .then(r => r.json())\n      .then(data => {\n        console.log('API response:', data); \n        setData(data.data.data);\n      })\n      .catch(error => console.error('Error fetching data:', error)); \n    };\n\n    const fetchData2 = () => {\n      fetch('http://localhost:3001/', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Accept': 'application/json',\n        },\n        body: JSON.stringify({\n          query: `\n          query {\n            data(orderBy: id, first: 1) {\n              nb_block\n              starknet_block\n              eventCount\n            }\n          }\n          `\n        })\n      })\n      .then(r => r.json())\n      .then(data => {\n        console.log('API response:', data); \n        setData2(data.data.data);\n      })\n      .catch(error => console.error('Error fetching data:', error)); \n    };\n\n    fetchData(); // Fetch data immediately\n    fetchData2(); // Fetch data from the second server\n    const intervalId = setInterval(fetchData, 1000); // Fetch data every 1 second\n    const intervalId2 = setInterval(fetchData2, 1000); // Fetch data from the second server every 1 second\n\n    return () => {\n      clearInterval(intervalId); // Clean up on unmount\n      clearInterval(intervalId2); // Clean up on unmount\n    };\n  }, []);\n\n  if (!data || !data2) {\n    return <div>Loading...</div>;\n  }\n\n  return (\n    <div>\n      {data.map(d => (\n        <div key={d.id}>\n          <p>Block Number: {d.nb_block}</p>\n          <p>Starknet Block: {d.starknet_block}</p>\n          <p>Event Count: {d.eventCount}</p>\n        </div>\n      ))}\n      {data2.map(d => (\n        <div key={d.id}>\n          <p>Block Number: {d.nb_block}</p>\n          <p>Starknet Block: {d.starknet_block}</p>\n          <p>Event Count: {d.eventCount}</p>\n        </div>\n      ))}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}